pipeline {   
    agent any

    environment{
        ANSIBLE_SERVER = "161.35.191.19"
    }
   
    stages {        
        stage("copy files to ansible server") {
            steps {
                script {
                   echo "copying all neccesary files to ansible server"
                   dir('java-maven-app'){

                        sshagent(['ansible-server-key']){  

                            //copying ansible files to remote droplet                      
                            sh "scp -o StrictHostKeyChecking=no ansible/* root@${ANSIBLE_SERVER}:/root"

                            //Saving AWS PEM file in to keyfile variable, which allows to copy file in the remote server(droplet)
                            withCredentials([sshUserPrivateKey(credentialsId: 'ansible-ec2-key', keyFileVariable: 'keyfile', usernameVariable: 'user')]) {
                                sh 'scp $keyfile root@$ANSIBLE_SERVER:/root/ssh-key.pem'
                            }                 

                        }
                   }

                }
            }
        }

        stage("prepare Ansible Server"){
            steps{
                script{
                    echo "preparing ansible server"
                    //remote plugin allows us to execute commands on the remote server
                    //define remote object
                    def remote = [:]
                    remote.name = "ansible-server"
                    remote.host = ANSIBLE_SERVER
                    remote.allowAnyHosts = true

                    //executing commands on ansible server (Droplet)
                    withCredentials([sshUserPrivateKey(credentialsId: 'ansible-server-key', keyFileVariable: 'keyfile', usernameVariable: 'user')]) {

                        remote.user = user
                        remote.identityFile = keyfile
                        sshScript remote: remote, script: "java-maven-app/prepare-ansible-server.sh"
                        sshCommand remote: remote, command: "ls -l"
                       
                   }
                }
            }
        }

        stage("execute ansible playbook"){
            steps{
                script{
                   echo "executing ansible playbook to ocnfigure ec2" 

                   sshagent (credentials:['ansible-server-key'] ){
                    
                        withCredentials([[
                                $class: 'AmazonWebServicesCredentialsBinding',
                                credentialsId: 'aws-ansible-creds' // Jenkins “AWS credentials” type
                                ]]) {
                                    sh """
                                    ssh -o StrictHostKeyChecking=no root@${ANSIBLE_SERVER} \\
                                        'AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \\
                                        AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \\
                                        AWS_DEFAULT_REGION="us-east-2" \\
                                        ansible-playbook -i /root/inventory_aws_ec2.yaml /root/my-playbook.yaml -vv'
                                    """
                                    }
                    }
                }
            }
        }
    }
} 
